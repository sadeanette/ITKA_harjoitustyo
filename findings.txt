## Harjoitustyöraportti

Palauttajat (max 3): Säde Latikka
Pisteitä yhteensä: 6.

## Ongelma 1
Tyyppi:   Polkuinjektio
Sijainti: delete_file()
Kuvaus:

Aliohjelmassa delete_file ei tarkasteta käyttäjän syöttämää polkua
millään tavalla. Tämä mahdollistaa sen, että käyttäjä tuhoaa minkä
tahansa tiedoston, esimerkiksi toisen käyttäjän tiedoston tai vaikkapa
jonkin järjestelmätiedoston.

### Esimerkkihyökkäys: 

1) Kirjaudu sisään käyttäjänä "sam".
2) Tee pyyntö /delete_file?file=../sue/tiedosto.txt
3) Tulos: Suen tiedosto tuhotaan

### Korjaus:

Commit: Problem 1 delete_file path injection

Korjasin tämän os.path.abspath - metodilla, joka normalisoi käyttäjän syötteenä
antaman polun absoluuttiseksi. Polun sisältö on kokonaan käyttäjän syöte ja
"/app/", joka tulee kuitenkin poistaa, jotta lopuksi polku osoittaa oikeaan tiedostoon.

Korjaus toimii, koska normalisoitu polku poistaa esimerkiksi "../" ja muut
symboliset merkinnät. Käyttäjä ei siis pääse hyppimään tiedostoissa taaksepäin.

Korjaus estää uuden polkuinjektion syntymisen, sillä uutta reittiä luotaessa
se osoittaa aina käyttäjän omaan hakemistoon. Polkuinjektiota yrittäessä
käyttäjälle näkyy virheviesti ja poistoa ei tehdä. Käyttäjä voi siis poistaa
vain omia tiedostojaan.

### Pisteet(3pt)

1pt vian löytämisestä
1pt vian korjaamisesta
1pt vikatyypin eliminoimisesta

## Ongelma 2
Tyyppi:   Shell-injektio
Sijainti: login()
Kuvaus:

Käyttäjä voi kirjautua toiselle käyttäjälle pelkästään
käyttäjänimellä antamatta salasanaa.

### Esimerkkihyökkäys: 

1) Kirjoita komentoriville:
   "curl http://localhost:5000/login?user=sue\"
   Tai selaimeen:
   "http://localhost:5000/login?user=sue\"
2) Tulos: Pääset onnistuneesti kirjautumaan suen tilille

### Korjaus:

Commit: Problem 2 fixed logging shell injection

Korjasin tämän muokkaamalla login() - funktiota siten, että kirjautumista
koskeva ehtolause testaa lisäksi onko syötetty käyttäjänimi käyttäjien
listassa. Korjaus on tehty kuitenkin niin, että mahdollisesti eri syötteitä
kokeileva käyttäjä ei saa selville, että tietty käyttäjänimi on kyseisessä
palvelussa.

Korjaus toimii, koska ehtolause tarkistaa käyttäjänimen olemassaolon.
Ehtolauseessa ei siis tule tilannetta, jossa users.get(username)
palauttaa arvon None, joka olemattoman salasanan kanssa olisi saman
arvoinen.

Korjaus estää uuden kirjautumisen shell injektion syntymisen, sillä
nyt ehtolause ei saa "true"-arvoa kahdesta "None"-arvosta. Samalla
kirjautumissivulla ei myöskään anneta tietoa muiden käyttäjänimien
olemisesta palvelimella, vaan eri syötteillä ilmoitetaan aina
"Login failed!"

### Pisteet(3pt)

1pt vian löytämisestä
1pt vian korjaamisesta
1pt vikatyypin eliminoimisesta

Ongelma 3

...
